// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CourseCreated extends ethereum.Event {
  get params(): CourseCreated__Params {
    return new CourseCreated__Params(this);
  }
}

export class CourseCreated__Params {
  _event: CourseCreated;

  constructor(event: CourseCreated) {
    this._event = event;
  }

  get courseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get videoUrl(): string {
    return this._event.parameters[4].value.toString();
  }

  get imageUrl(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class CoursePurchase extends ethereum.Event {
  get params(): CoursePurchase__Params {
    return new CoursePurchase__Params(this);
  }
}

export class CoursePurchase__Params {
  _event: CoursePurchase;

  constructor(event: CoursePurchase) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get courseId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Platform__coursesResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: string;
  value4: string;
  value5: string;
  value6: string;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: string,
    value4: string,
    value5: string,
    value6: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getId(): BigInt {
    return this.value1;
  }

  getPrice(): BigInt {
    return this.value2;
  }

  getName(): string {
    return this.value3;
  }

  getDescription(): string {
    return this.value4;
  }

  getVideoUrl(): string {
    return this.value5;
  }

  getImageUrl(): string {
    return this.value6;
  }
}

export class Platform extends ethereum.SmartContract {
  static bind(address: Address): Platform {
    return new Platform("Platform", address);
  }

  courses(param0: BigInt): Platform__coursesResult {
    let result = super.call(
      "courses",
      "courses(uint256):(address,uint256,uint256,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Platform__coursesResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toString(),
      result[5].toString(),
      result[6].toString()
    );
  }

  try_courses(param0: BigInt): ethereum.CallResult<Platform__coursesResult> {
    let result = super.tryCall(
      "courses",
      "courses(uint256):(address,uint256,uint256,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Platform__coursesResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toString(),
        value[5].toString(),
        value[6].toString()
      )
    );
  }

  learnerToCourseId(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "learnerToCourseId",
      "learnerToCourseId(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_learnerToCourseId(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "learnerToCourseId",
      "learnerToCourseId(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerToRevenue(param0: Address): BigInt {
    let result = super.call(
      "ownerToRevenue",
      "ownerToRevenue(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_ownerToRevenue(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerToRevenue",
      "ownerToRevenue(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewMapLearner(learner: Address): Array<BigInt> {
    let result = super.call(
      "viewMapLearner",
      "viewMapLearner(address):(uint256[])",
      [ethereum.Value.fromAddress(learner)]
    );

    return result[0].toBigIntArray();
  }

  try_viewMapLearner(learner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "viewMapLearner",
      "viewMapLearner(address):(uint256[])",
      [ethereum.Value.fromAddress(learner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  viewMyBalance(): BigInt {
    let result = super.call("viewMyBalance", "viewMyBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_viewMyBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "viewMyBalance",
      "viewMyBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewMyCourses(): Array<BigInt> {
    let result = super.call("viewMyCourses", "viewMyCourses():(uint256[])", []);

    return result[0].toBigIntArray();
  }

  try_viewMyCourses(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "viewMyCourses",
      "viewMyCourses():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class ListCourseCall extends ethereum.Call {
  get inputs(): ListCourseCall__Inputs {
    return new ListCourseCall__Inputs(this);
  }

  get outputs(): ListCourseCall__Outputs {
    return new ListCourseCall__Outputs(this);
  }
}

export class ListCourseCall__Inputs {
  _call: ListCourseCall;

  constructor(call: ListCourseCall) {
    this._call = call;
  }

  get _price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _videoUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _imageUrl(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ListCourseCall__Outputs {
  _call: ListCourseCall;

  constructor(call: ListCourseCall) {
    this._call = call;
  }
}
